name: Build and Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: choice
        default: dev
        options:
          - dev
          - staging
          - prod
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: choice
        default: dev
        options:
          - dev
          - staging
          - prod
      commit_sha:
        description: 'Commit SHA to deploy'
        required: false
        default: ''

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.inputs.commit_sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Azure Container Registry Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.AZ_CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZ_SERVICE_PRINCIPAL_CLIENT_ID }}
          password: ${{ secrets.AZ_SERVICE_PRINCIPAL_CLIENT_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: $GITHUB_WORKSPACE/apps/frontend
      #     push: true
      #     tags: ${{ vars.AZ_CONTAINER_REGISTRY_LOGIN_SERVER }}/{{ vars.IMAGE_NAME }}:${{ github.sha }},${{ vars.AZ_CONTAINER_REGISTRY_LOGIN_SERVER }}/{{ vars.IMAGE_NAME }}:latest

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.inputs.commit_sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Azure Container Registry Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.AZ_CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZ_SERVICE_PRINCIPAL_CLIENT_ID }}
          password: ${{ secrets.AZ_SERVICE_PRINCIPAL_CLIENT_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: $GITHUB_WORKSPACE/apps/backend
      #     push: true
      #     tags: ${{ vars.AZ_CONTAINER_REGISTRY_LOGIN_SERVER }}/{{ vars.IMAGE_NAME }}:${{ github.sha }},${{ vars.AZ_CONTAINER_REGISTRY_LOGIN_SERVER }}/{{ vars.IMAGE_NAME }}:latest
    
  deploy-frontend:
    name: Deploy App
    needs: build-frontend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout code
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.inputs.commit_sha }}

      # - name: Deploy Infra
      #   uses: azure/cli@v2
      #   with:
      #     inlineScript: |
      #       az stack group create -n ${{ vars.AZ_BICEP_STACK_NAME }}
      #         --aou deleteAll \
      #         --dm none \
      #         -g ${{ vars.AZ_RESOURCE_GROUP }} \ 
      #         -f $GITHUB_WORKSPACE/infra/frontend/main.bicep \ 
      #         -p $GITHUB_WORKSPACE/infra/frontend/main.bicepparam

  deploy-backend:
    name: Deploy App
    needs: build-backend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout code
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.inputs.commit_sha }}

      # - name: Deploy Infra
      #   uses: azure/cli@v2
      #   with:
      #     inlineScript: |
      #       az stack group create -n ${{ vars.AZ_BICEP_STACK_NAME }}
      #         --aou deleteAll \
      #         --dm none \
      #         -g ${{ vars.AZ_RESOURCE_GROUP }} \ 
      #         -f $GITHUB_WORKSPACE/infra/backend/main.bicep \ 
      #         -p $GITHUB_WORKSPACE/infra/backend/main.bicepparam
